---
  - name: "Installing Airflow"
    hosts: localhost
    become: true
    become_user: root 
    vars:
      
    
    tasks:
    - name: Install libpqdev
      apt:
        name: 
          - libpq-dev
          - postgresql 
          - postgresql-contrib 

    - name: Install Airflow packages
      ansible.builtin.pip:
        name: 
          - apache-airflow[gcp]
          - apache-airflow[sentry]
          - apache-airflow[statsd] 
          - apache-airflow[postgresql]
          - psycopg2

    - name: Check 0
      stat:
        path: "/root/airflow/airflow.cfg"
      register: register_name0
      
    - name: Check 0.0
      debug:
        msg: "The file or directory exists"
      when: register_name0.stat.exists

    - name: install airflow
      shell: |
        export AIRFLOW_HOME="/var/www/airflow/"
        airflow 
      ignore_errors: true

    - name: Check 1
      stat:
        path: "/root/airflow/airflow.cfg"
      register: register_name1
      
    - name: Check 1.1
      debug:
        msg: "The file or directory exists"
      when: register_name1.stat.exists
      
    - name: copy webserver config script
      copy:
        src: "config.sh"
        dest: "/usr/bin/"
        mode: 0755      
        
    - name: copy postgressql script
      copy:
        src: "postgres.sh"
        dest: "/var/www/"
        mode: 0755

    - name: Execute psql
      shell: |
        sh ./postgres.sh
        chdir: /var/www
      ignore_errors: true

#     - name: Execute psql
#       become: true
#       become_user: postgres
#       command: psql -U postgres 'CREATE USER airflow PASSWORD 'airflow'; CREATE DATABASE airflow; GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO airflow;'
#       ignore_errors: true

    - name: change sequential to local
      command: sed -i '/executor = SequentialExecutor/ s/SequentialExecutor/LocalExecutor/' /root/airflow/airflow.cfg
      ignore_errors: true
      args:
        warn: false 

    - name: change endpoint to postgres
      command: sed -i "s|sqlite:////var/www/airflow//airflow.db|postgresql+psycopg2://airflow:airflow@localhost/airflow|g" /root/airflow/airflow.cfg       
      ignore_errors: true
      args:
        warn: false 
      
    - name: init db
      shell: |
        export AIRFLOW_HOME="/var/www/airflow/"
        airflow db init
      ignore_errors: true

    - name: Check 2
      stat:
        path: "/root/airflow/airflow.cfg"
      register: register2_name
      
    - name: Check 2.2
      debug:
        msg: "The file or directory exists"
      when: register_name2.stat.exists

#     - name: install airflow db user
#       command: ./postgres.sh
#         chdir: /var/www/

    - name: copy webserver
      copy:
        src: "airflow-webserver.service"
        dest: "/etc/systemd/system/"
        mode: 0755

    - name: copy scheduler
      copy:
        src: "airflow-scheduler.service"
        dest: "/etc/systemd/system/"
        mode: 0755
      ignore_errors: true
      
#     - name: Reload Daemon & enable services
#       command: systemctl daemon-reload && systemctl enable airflow-webserver.service && sudo systemctl enable airflow-scheduler.service
#       ignore_errors: true
      
    - name: Reload Daemon & Enable services
      shell: |
        systemctl daemon-reload
        systemctl enable airflow-webserver.service
        systemctl enable airflow-scheduler.service
      ignore_errors: true

    - name: Start webserver
      shell: |
        systemctl start airflow-webserver.service
      ignore_errors: true


    - name: Start scheduler
      shell: |
        systemctl start airflow-scheduler.service
      ignore_errors: true


    - name: Configure ssl_main.conf
      blockinfile:
        path: /etc/nginx/conf.d/ssl_main.conf
        insertafter: 'ssl_dhparam\s/etc/letsencrypt/ssl-dhparams.pem;\s#\smanaged\sby\sCertbot'
        content: "location / {
                  proxy_pass http://localhost:8080;
                  proxy_set_header Host $http_host;
                  proxy_redirect off;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';}"
                  
    - name: Start scheduler
      command: systemctl restart nginx
      ignore_errors: true
      
    - name: Restart webserver
      shell: |
        systemctl restart airflow-webserver.service
      ignore_errors: true      
      
    - name: Restart scheduler
      shell: |
        systemctl restart airflow-scheduler.service
      ignore_errors: true

  
